import React from 'react';
declare const _default: import("@storybook/types").ComponentAnnotations<import("@storybook/react/dist/types-0fc72a6d").R, Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & React.RefAttributes<any>>;
export default _default;
export declare const Default: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & React.RefAttributes<any>>;
export declare const Bordered: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & React.RefAttributes<any>>;
export declare const CustomHover: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & React.RefAttributes<any>>;
export declare const WithIcon: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & React.RefAttributes<any>>;
export declare const WithIconBadge: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & React.RefAttributes<any>>;
export declare const WithCustomIcon: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & React.RefAttributes<any>>;
export declare const LinkWithWrapper: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & React.RefAttributes<any>>;
export declare const LinkWithIcon: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & React.RefAttributes<any>>;

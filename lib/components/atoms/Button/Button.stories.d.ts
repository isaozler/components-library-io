/// <reference types="react" />
import { ComponentStory, ComponentMeta } from '@storybook/react';
declare const _default: ComponentMeta<import("react").ForwardRefExoticComponent<Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & import("react").RefAttributes<any>>>;
export default _default;
export declare const Default: ComponentStory<import("react").ForwardRefExoticComponent<Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & import("react").RefAttributes<any>>>;
export declare const Bordered: ComponentStory<import("react").ForwardRefExoticComponent<Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & import("react").RefAttributes<any>>>;
export declare const CustomHover: ComponentStory<import("react").ForwardRefExoticComponent<Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & import("react").RefAttributes<any>>>;
export declare const WithIcon: ComponentStory<import("react").ForwardRefExoticComponent<Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & import("react").RefAttributes<any>>>;
export declare const WithIconBadge: ComponentStory<import("react").ForwardRefExoticComponent<Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & import("react").RefAttributes<any>>>;
export declare const WithCustomIcon: ComponentStory<import("react").ForwardRefExoticComponent<Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & import("react").RefAttributes<any>>>;
export declare const LinkWithWrapper: ComponentStory<import("react").ForwardRefExoticComponent<Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & import("react").RefAttributes<any>>>;
export declare const LinkWithIcon: ComponentStory<import("react").ForwardRefExoticComponent<Pick<import("./Button.types").ButtonProps, "label" | "type" | "className" | "color" | "onClick" | "fontWeight" | "href" | "size" | "icon" | "colorHover" | "backgroundColor" | "backgroundColorHover" | "border" | "borderHover" | "isFullWidth" | "iconAlignment" | "underlined" | "underlinedHover" | "iconCustom" | "isNewWindow" | "badge" | "badgeTextColor" | "badgeColor" | "isDisabled" | "linkWrapper" | "innerRef"> & import("react").RefAttributes<any>>>;
